#!/bin/sh

if ! type bclm >//dev/null 2>&1; then
    echo 'bclm command not found, exiting' >&2
    exit 1
fi

starting_bclm=$(bclm read)
echo "current bclm is $starting_bclm"

has_battery() {
    pmset -g batt | grep -q 'InternalBattery'
}

is_not_plugged() {
    pmset -g batt | grep -q 'Battery Power'
}

is_plugged_and_not_charging() {
    pmset -g batt | grep -q 'AC Power' && pmset -g batt | grep -Eq 'charged|finishing|not charging'
}

is_plugged_and_charging() {
    pmset -g batt | grep -q 'AC Power' && pmset -g batt | grep -q 'charging' && ! pmset -g batt | grep -q 'not charging'
}

get_bat_pct() {
    current_capacity=$(ioreg -l | grep -o '"CurrentCapacity" = [0-9]*' | awk '{print $3}')
    max_capacity=$(ioreg -l | grep -o '"MaxCapacity" = [0-9]*' | awk '{print $3}')
    percentage=$(echo "($current_capacity * 100) / $max_capacity" | bc)

    echo "$percentage"
}

get_bat_status() {
    if is_not_plugged; then
        echo "discharging at $(get_bat_pct)%"
    elif is_plugged_and_not_charging; then
        echo "not charging at $(get_bat_pct)%"
    elif is_plugged_and_charging; then
        echo "charging at $(get_bat_pct)%"
    else
        echo "unknown"
    fi
}

reset_bclm() {
    if [ -z "$starting_bclm" ]; then
        return 1
    fi
    if [ "$starting_bclm" -eq 100 ]; then
        return 1
    fi
    sudo bclm write "$starting_bclm"
}

wait_for() {
    func="$1"
    timeout_seconds=10
    elapsed_seconds=0
    while [ $elapsed_seconds -lt "$timeout_seconds" ]; do
        if "$func"; then
            return 0
        fi
        sleep 1
        elapsed_seconds=$((elapsed_seconds + 1))
    done
    return 1
}

reset_bclm_and_report() {
    reset_bclm && echo "bclm reset to $starting_bclm"
    echo "battery $(get_bat_status)"
}

handle_interrupt() {
    printf '\ninterrupted..\n'
    reset_bclm
    echo "bclm reset to $starting_bclm, waiting for effect.."
    wait_for "is_plugged_and_not_charging"
    echo "battery $(get_bat_status)"
    exit 0
}

if ! has_battery; then
    echo 'no battery found, exiting' >&2
    exit 1
fi

if is_not_plugged; then
    echo 'not plugged in, exiting' >&2
    exit 1
fi

if [ "$starting_bclm" -eq 100 ]; then
    echo 'nothing to do, exiting'
    exit 0
fi

trap handle_interrupt INT TERM

sudo bclm write 100
echo "bclm set to 100, waiting for effect.."
if ! wait_for "is_plugged_and_charging"; then
    echo "charging did not start"
    reset_bclm_and_report
    exit 0
fi

while is_plugged_and_charging; do
    printf "\rbattery charging at %s.." "$(get_bat_pct)%"
    sleep 5
done
echo

if is_not_plugged; then
    echo 'battery unplugged..' >&2
    reset_bclm_and_report
    exit 1
fi

echo "charging is stopped"
reset_bclm_and_report
