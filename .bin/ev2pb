#!/bin/bash

var="$1"

[ -z "$var" ] && {
    echo "usage: $0 <var name>"
    exit 1
}

[ -f ".env" ] || {
    echo "no .env file here"
    exit 1
}

[[ "$var" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]] || {
    echo "'$var' is not a valid variable name"
    exit 1
}

(
    set -e
    source .env
) 2>/dev/null || {
    echo ".env contains invalid syntax"
    exit 1
}

(
    set -e
    set -u
    source .env

    [ -n "${!var+x}" ] || {
        echo "$var is not set in .env"
        exit 1
    }

    value=$(eval echo "\$$var")

    [ -n "$value" ] || {
        echo "$var has an empty value"
        exit 0
    }

    printf '%s' "$value"

    if command -v pbcopy >/dev/null 2>&1; then
        printf '%s' "$value" | pbcopy
        echo " (copied to paste buffer)"
    elif command -v xclip >/dev/null 2>&1; then
        printf '%s' "$value" | xclip -selection clipboard
        echo " (copied to paste buffer)"
    elif command -v xsel >/dev/null 2>&1; then
        printf '%s' "$value" | xsel --clipboard --input
        echo " (copied to paste buffer)"
    elif command -v wl-copy >/dev/null 2>&1; then
        printf '%s' "$value" | wl-copy
        echo " (copied to paste buffer)"
    elif command -v clip >/dev/null 2>&1; then
        printf '%s' "$value" | clip
        echo " (copied to paste buffer)"
    else
        echo
    fi
)
